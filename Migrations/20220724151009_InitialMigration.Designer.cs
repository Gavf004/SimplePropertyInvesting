// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimplePropertyInvesting.Context;

#nullable disable

namespace SimplePropertyInvesting.Migrations
{
    [DbContext(typeof(InvestContext))]
    [Migration("20220724151009_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SimplePropertyInvesting.Models.Property", b =>
                {
                    b.Property<int>("Property_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Property_Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eircode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Monthly_Mortgage_Payment")
                        .HasColumnType("real");

                    b.Property<float>("Monthly_Rental_Income")
                        .HasColumnType("real");

                    b.Property<float>("Property_Insurance")
                        .HasColumnType("real");

                    b.Property<float>("Property_Tax")
                        .HasColumnType("real");

                    b.Property<float>("Property_Value")
                        .HasColumnType("real");

                    b.Property<DateTime>("Purchase_Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Purchase_Price")
                        .HasColumnType("real");

                    b.Property<float>("Total_Expenditure")
                        .HasColumnType("real");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Property_Id");

                    b.HasIndex("UserID");

                    b.ToTable("properties");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenantId"), 1L, 1);

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("TenantId");

                    b.HasIndex("UnitId");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"), 1L, 1);

                    b.Property<int?>("Property_Id")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.HasIndex("Property_Id");

                    b.ToTable("units");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.Property", b =>
                {
                    b.HasOne("SimplePropertyInvesting.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.Tenant", b =>
                {
                    b.HasOne("SimplePropertyInvesting.Models.Unit", null)
                        .WithMany("Tenants")
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.Unit", b =>
                {
                    b.HasOne("SimplePropertyInvesting.Models.Property", null)
                        .WithMany("Units")
                        .HasForeignKey("Property_Id");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.Property", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("SimplePropertyInvesting.Models.Unit", b =>
                {
                    b.Navigation("Tenants");
                });
#pragma warning restore 612, 618
        }
    }
}
